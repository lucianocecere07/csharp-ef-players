// <auto-generated />
using CSharpEntityFrameworkPlayers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CSharpEntityFrameworkPlayers.Migrations
{
    [DbContext(typeof(SportContext))]
    [Migration("20221222172531_NuovoDbase")]
    partial class NuovoDbase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CSharpEntityFrameworkPlayers.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"));

                    b.Property<int>("match")
                        .HasColumnType("int")
                        .HasColumnName("partite_giocate");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<double>("score")
                        .HasColumnType("float")
                        .HasColumnName("punteggio");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cognome");

                    b.Property<int>("teamId")
                        .HasColumnType("int");

                    b.Property<int>("win")
                        .HasColumnType("int")
                        .HasColumnName("partite_vinte");

                    b.HasKey("PlayerId");

                    b.HasIndex("teamId");

                    b.ToTable("players");
                });

            modelBuilder.Entity("CSharpEntityFrameworkPlayers.Team", b =>
                {
                    b.Property<int>("teamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("teamId"));

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("città");

                    b.Property<string>("coach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("allenatore");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("colori");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.HasKey("teamId");

                    b.ToTable("team");
                });

            modelBuilder.Entity("CSharpEntityFrameworkPlayers.Player", b =>
                {
                    b.HasOne("CSharpEntityFrameworkPlayers.Team", "team")
                        .WithMany("playersInTeam")
                        .HasForeignKey("teamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("team");
                });

            modelBuilder.Entity("CSharpEntityFrameworkPlayers.Team", b =>
                {
                    b.Navigation("playersInTeam");
                });
#pragma warning restore 612, 618
        }
    }
}
